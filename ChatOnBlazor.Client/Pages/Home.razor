@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Home</PageTitle>

<MudText Typo="Typo.h1" GutterBottom="true" Align="Align.Center">@greeting</MudText>

<MudText Typo="Typo.h1">h1. Heading</MudText>
<MudText Typo="Typo.h2">h2. Heading</MudText>
<MudText Typo="Typo.h3">h3. Heading</MudText>
<MudText Typo="Typo.h4">h4. Heading</MudText>
<MudText Typo="Typo.h5">h5. Heading</MudText>
<MudText Typo="Typo.h6">h6. Heading</MudText>
<MudText Typo="Typo.subtitle1">subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo="Typo.subtitle2">subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo="Typo.body1">body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.</MudText>
<MudText Typo="Typo.body2">body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur unde suscipit, quam beatae rerum inventore consectetur, neque doloribus, cupiditate numquam dignissimos laborum fugiat deleniti? Eum quasi quidem quibusdam.</MudText>
<MudText Typo="Typo.input">input. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos blanditiis tenetur</MudText>
<MudText Typo="Typo.button">BUTTON TEXT</MudText>
<MudText Typo="Typo.caption">caption text</MudText>
<MudText Typo="Typo.overline">OVERLINE TEXT</MudText>
<MudText Typo="Typo.button" HtmlTag="h3">button typo but the element is h3</MudText>
<MudText Typo="Typo.body2" HtmlTag="strong">body2 typo but the element is strong</MudText>


@code{
    private string greeting;

    protected override void OnInitialized()
    {
        greeting = GetGreeting();
    }

    private string GetGreeting()
    {
        var hour = DateTime.Now.Hour;
        if (hour >= 5 && hour < 12)
            return "Good morning";
        else if (hour >= 12 && hour < 18)
            return "Good afternoon";
        else if (hour >= 18 && hour < 22)
            return "Good evening";
        else
            return "Good night";
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if(user.Identity.IsAuthenticated)
        {
            greeting = $"{GetGreeting()}, {user.Identity.Name}";
        }
    }
}